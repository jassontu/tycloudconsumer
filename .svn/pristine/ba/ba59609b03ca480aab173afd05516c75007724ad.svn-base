package ty.cloud.mq.consumer.service.queue;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import javax.jms.BytesMessage;
import javax.jms.Destination;
import javax.jms.Message;
import javax.jms.MessageListener;
import javax.jms.TextMessage;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import ty.cloud.mq.consumer.service.dao.LocationDao;

/**
 * @description Queque消息监听器
 */
@Service("queueReceiver")
public class QueueReceiver implements MessageListener {

	private Logger logger = LoggerFactory.getLogger(QueueReceiver.class);

	ExecutorService fixedThreadPool = Executors.newFixedThreadPool(10);
	/*ExecutorService areaRemindFixedThreadPool = Executors.newFixedThreadPool(6);
	ExecutorService carStopRemindFixedThreadPool = Executors.newFixedThreadPool(6);
	ExecutorService messageSendThreadPool = Executors.newFixedThreadPool(6);
	ExecutorService lineWarnFixedThreadPool = Executors.newFixedThreadPool(6);*/

	public static final int expiretime = 3600 * 24;// 设置过期时间,单位秒

	@Override
	public void onMessage(Message message) {
		System.out.println("onMessage...");
		try {
			if(message instanceof TextMessage)
			{
				final String body = ((TextMessage) message).getText();
				System.out.println("ErpBody:"+body);
				/*fixedThreadPool.execute(new Runnable() {
					@Override
					public void run() {
						savedata(body);
					}
				});
				logger.info("接收到消息:{}", body);*/
			}
			if (message instanceof BytesMessage) {
				/*BytesMessage msg = (BytesMessage) message;
				int length = (int) msg.getBodyLength();

				final byte[] byteContent = new byte[length];
				msg.readBytes(byteContent);

				logger.info("接收到消息:{}", Hex.encodeHexString(byteContent));

				fixedThreadPool.execute(new Runnable() {
					@Override
					public void run() {
						byteToGpsrealdatas(byteContent);
					}
				});*/
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void savedata(String data) {
		//
		LocationDao locationDao = new LocationDao();
		locationDao.insertUser(data);
		
	}

}
